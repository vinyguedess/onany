# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: OnAny CI Test

on:
  push:
    branches:
      - master
      - 'feat/*'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Prepare CodeClimate report
      run: |
          wget https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 \
            -O cc-test-reporter
          chmod +x ./cc-test-reporter
          ./cc-test-reporter before-build

    - name: Run tests
      env:
        AMQP_HOST: ${{ secrets.AMQP_HOST }}
        AMQP_USER: ${{ secrets.AMQP_USER }}
        AMQP_PASS: ${{ secrets.AMQP_PASS }}
      run: |
        pip install python-dotenv
        pip install coverage
        make citest
    
    - name: Code Climate Coverage Report
      env:
        CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
      run: |
        ./cc-test-reporter after-build
